// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SxDataTransfer.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SxDataTransfer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace TSDStreaming {

namespace {

const ::google::protobuf::Descriptor* MbDataTransfer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MbDataTransfer_reflection_ = NULL;
const ::google::protobuf::Descriptor* MbDataPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MbDataPacket_reflection_ = NULL;
const ::google::protobuf::Descriptor* MbDatRecvResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MbDatRecvResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_SxDataTransfer_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_SxDataTransfer_2eproto() {
  protobuf_AddDesc_SxDataTransfer_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SxDataTransfer.proto");
  GOOGLE_CHECK(file != NULL);
  MbDataTransfer_descriptor_ = file->message_type(0);
  static const int MbDataTransfer_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MbDataTransfer, batchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MbDataTransfer, mb_packet_),
  };
  MbDataTransfer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MbDataTransfer_descriptor_,
      MbDataTransfer::default_instance_,
      MbDataTransfer_offsets_,
      -1,
      -1,
      -1,
      sizeof(MbDataTransfer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MbDataTransfer, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MbDataTransfer, _is_default_instance_));
  MbDataPacket_descriptor_ = file->message_type(1);
  static const int MbDataPacket_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MbDataPacket, mb_asset_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MbDataPacket, mb_unit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MbDataPacket, mb_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MbDataPacket, mb_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MbDataPacket, mb_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MbDataPacket, mb_tag_type_),
  };
  MbDataPacket_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MbDataPacket_descriptor_,
      MbDataPacket::default_instance_,
      MbDataPacket_offsets_,
      -1,
      -1,
      -1,
      sizeof(MbDataPacket),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MbDataPacket, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MbDataPacket, _is_default_instance_));
  MbDatRecvResponse_descriptor_ = file->message_type(2);
  static const int MbDatRecvResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MbDatRecvResponse, mb_error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MbDatRecvResponse, mb_batch_id_),
  };
  MbDatRecvResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MbDatRecvResponse_descriptor_,
      MbDatRecvResponse::default_instance_,
      MbDatRecvResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(MbDatRecvResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MbDatRecvResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MbDatRecvResponse, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SxDataTransfer_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MbDataTransfer_descriptor_, &MbDataTransfer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MbDataPacket_descriptor_, &MbDataPacket::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MbDatRecvResponse_descriptor_, &MbDatRecvResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SxDataTransfer_2eproto() {
  delete MbDataTransfer::default_instance_;
  delete MbDataTransfer_reflection_;
  delete MbDataPacket::default_instance_;
  delete MbDataPacket_reflection_;
  delete MbDatRecvResponse::default_instance_;
  delete MbDatRecvResponse_reflection_;
}

void protobuf_AddDesc_SxDataTransfer_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_SxDataTransfer_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024SxDataTransfer.proto\022\014TSDStreaming\"P\n\016"
    "MbDataTransfer\022\017\n\007batchId\030\001 \001(\t\022-\n\tmb_pa"
    "cket\030\002 \003(\0132\032.TSDStreaming.MbDataPacket\"\177"
    "\n\014MbDataPacket\022\023\n\013mb_asset_id\030\001 \001(\t\022\017\n\007m"
    "b_unit\030\002 \001(\t\022\020\n\010mb_value\030\003 \001(\t\022\021\n\tmb_sta"
    "tus\030\004 \001(\t\022\017\n\007mb_time\030\005 \001(\t\022\023\n\013mb_tag_typ"
    "e\030\006 \001(\t\"\?\n\021MbDatRecvResponse\022\025\n\rmb_error"
    "_code\030\001 \001(\t\022\023\n\013mb_batch_id\030\002 \001(\t2`\n\014Data"
    "Transfer\022P\n\017MbSentDataToTsd\022\034.TSDStreami"
    "ng.MbDataTransfer\032\037.TSDStreaming.MbDatRe"
    "cvResponseb\006proto3", 418);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SxDataTransfer.proto", &protobuf_RegisterTypes);
  MbDataTransfer::default_instance_ = new MbDataTransfer();
  MbDataPacket::default_instance_ = new MbDataPacket();
  MbDatRecvResponse::default_instance_ = new MbDatRecvResponse();
  MbDataTransfer::default_instance_->InitAsDefaultInstance();
  MbDataPacket::default_instance_->InitAsDefaultInstance();
  MbDatRecvResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SxDataTransfer_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SxDataTransfer_2eproto {
  StaticDescriptorInitializer_SxDataTransfer_2eproto() {
    protobuf_AddDesc_SxDataTransfer_2eproto();
  }
} static_descriptor_initializer_SxDataTransfer_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MbDataTransfer::kBatchIdFieldNumber;
const int MbDataTransfer::kMbPacketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MbDataTransfer::MbDataTransfer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TSDStreaming.MbDataTransfer)
}

void MbDataTransfer::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MbDataTransfer::MbDataTransfer(const MbDataTransfer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TSDStreaming.MbDataTransfer)
}

void MbDataTransfer::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  batchid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MbDataTransfer::~MbDataTransfer() {
  // @@protoc_insertion_point(destructor:TSDStreaming.MbDataTransfer)
  SharedDtor();
}

void MbDataTransfer::SharedDtor() {
  batchid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MbDataTransfer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MbDataTransfer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MbDataTransfer_descriptor_;
}

const MbDataTransfer& MbDataTransfer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SxDataTransfer_2eproto();
  return *default_instance_;
}

MbDataTransfer* MbDataTransfer::default_instance_ = NULL;

MbDataTransfer* MbDataTransfer::New(::google::protobuf::Arena* arena) const {
  MbDataTransfer* n = new MbDataTransfer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MbDataTransfer::Clear() {
// @@protoc_insertion_point(message_clear_start:TSDStreaming.MbDataTransfer)
  batchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_packet_.Clear();
}

bool MbDataTransfer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TSDStreaming.MbDataTransfer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string batchId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_batchid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->batchid().data(), this->batchid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TSDStreaming.MbDataTransfer.batchId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mb_packet;
        break;
      }

      // repeated .TSDStreaming.MbDataPacket mb_packet = 2;
      case 2: {
        if (tag == 18) {
         parse_mb_packet:
          DO_(input->IncrementRecursionDepth());
         parse_loop_mb_packet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_mb_packet()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_mb_packet;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TSDStreaming.MbDataTransfer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TSDStreaming.MbDataTransfer)
  return false;
#undef DO_
}

void MbDataTransfer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TSDStreaming.MbDataTransfer)
  // optional string batchId = 1;
  if (this->batchid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->batchid().data(), this->batchid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDataTransfer.batchId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->batchid(), output);
  }

  // repeated .TSDStreaming.MbDataPacket mb_packet = 2;
  for (unsigned int i = 0, n = this->mb_packet_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mb_packet(i), output);
  }

  // @@protoc_insertion_point(serialize_end:TSDStreaming.MbDataTransfer)
}

::google::protobuf::uint8* MbDataTransfer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSDStreaming.MbDataTransfer)
  // optional string batchId = 1;
  if (this->batchid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->batchid().data(), this->batchid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDataTransfer.batchId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->batchid(), target);
  }

  // repeated .TSDStreaming.MbDataPacket mb_packet = 2;
  for (unsigned int i = 0, n = this->mb_packet_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->mb_packet(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TSDStreaming.MbDataTransfer)
  return target;
}

int MbDataTransfer::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:TSDStreaming.MbDataTransfer)
  int total_size = 0;

  // optional string batchId = 1;
  if (this->batchid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->batchid());
  }

  // repeated .TSDStreaming.MbDataPacket mb_packet = 2;
  total_size += 1 * this->mb_packet_size();
  for (int i = 0; i < this->mb_packet_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mb_packet(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MbDataTransfer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSDStreaming.MbDataTransfer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MbDataTransfer* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MbDataTransfer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSDStreaming.MbDataTransfer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSDStreaming.MbDataTransfer)
    MergeFrom(*source);
  }
}

void MbDataTransfer::MergeFrom(const MbDataTransfer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSDStreaming.MbDataTransfer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  mb_packet_.MergeFrom(from.mb_packet_);
  if (from.batchid().size() > 0) {

    batchid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.batchid_);
  }
}

void MbDataTransfer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSDStreaming.MbDataTransfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MbDataTransfer::CopyFrom(const MbDataTransfer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSDStreaming.MbDataTransfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MbDataTransfer::IsInitialized() const {

  return true;
}

void MbDataTransfer::Swap(MbDataTransfer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MbDataTransfer::InternalSwap(MbDataTransfer* other) {
  batchid_.Swap(&other->batchid_);
  mb_packet_.UnsafeArenaSwap(&other->mb_packet_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MbDataTransfer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MbDataTransfer_descriptor_;
  metadata.reflection = MbDataTransfer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MbDataTransfer

// optional string batchId = 1;
void MbDataTransfer::clear_batchid() {
  batchid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MbDataTransfer::batchid() const {
  // @@protoc_insertion_point(field_get:TSDStreaming.MbDataTransfer.batchId)
  return batchid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDataTransfer::set_batchid(const ::std::string& value) {
  
  batchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TSDStreaming.MbDataTransfer.batchId)
}
 void MbDataTransfer::set_batchid(const char* value) {
  
  batchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TSDStreaming.MbDataTransfer.batchId)
}
 void MbDataTransfer::set_batchid(const char* value, size_t size) {
  
  batchid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TSDStreaming.MbDataTransfer.batchId)
}
 ::std::string* MbDataTransfer::mutable_batchid() {
  
  // @@protoc_insertion_point(field_mutable:TSDStreaming.MbDataTransfer.batchId)
  return batchid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MbDataTransfer::release_batchid() {
  // @@protoc_insertion_point(field_release:TSDStreaming.MbDataTransfer.batchId)
  
  return batchid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDataTransfer::set_allocated_batchid(::std::string* batchid) {
  if (batchid != NULL) {
    
  } else {
    
  }
  batchid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), batchid);
  // @@protoc_insertion_point(field_set_allocated:TSDStreaming.MbDataTransfer.batchId)
}

// repeated .TSDStreaming.MbDataPacket mb_packet = 2;
int MbDataTransfer::mb_packet_size() const {
  return mb_packet_.size();
}
void MbDataTransfer::clear_mb_packet() {
  mb_packet_.Clear();
}
const ::TSDStreaming::MbDataPacket& MbDataTransfer::mb_packet(int index) const {
  // @@protoc_insertion_point(field_get:TSDStreaming.MbDataTransfer.mb_packet)
  return mb_packet_.Get(index);
}
::TSDStreaming::MbDataPacket* MbDataTransfer::mutable_mb_packet(int index) {
  // @@protoc_insertion_point(field_mutable:TSDStreaming.MbDataTransfer.mb_packet)
  return mb_packet_.Mutable(index);
}
::TSDStreaming::MbDataPacket* MbDataTransfer::add_mb_packet() {
  // @@protoc_insertion_point(field_add:TSDStreaming.MbDataTransfer.mb_packet)
  return mb_packet_.Add();
}
::google::protobuf::RepeatedPtrField< ::TSDStreaming::MbDataPacket >*
MbDataTransfer::mutable_mb_packet() {
  // @@protoc_insertion_point(field_mutable_list:TSDStreaming.MbDataTransfer.mb_packet)
  return &mb_packet_;
}
const ::google::protobuf::RepeatedPtrField< ::TSDStreaming::MbDataPacket >&
MbDataTransfer::mb_packet() const {
  // @@protoc_insertion_point(field_list:TSDStreaming.MbDataTransfer.mb_packet)
  return mb_packet_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MbDataPacket::kMbAssetIdFieldNumber;
const int MbDataPacket::kMbUnitFieldNumber;
const int MbDataPacket::kMbValueFieldNumber;
const int MbDataPacket::kMbStatusFieldNumber;
const int MbDataPacket::kMbTimeFieldNumber;
const int MbDataPacket::kMbTagTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MbDataPacket::MbDataPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TSDStreaming.MbDataPacket)
}

void MbDataPacket::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MbDataPacket::MbDataPacket(const MbDataPacket& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TSDStreaming.MbDataPacket)
}

void MbDataPacket::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  mb_asset_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_tag_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MbDataPacket::~MbDataPacket() {
  // @@protoc_insertion_point(destructor:TSDStreaming.MbDataPacket)
  SharedDtor();
}

void MbDataPacket::SharedDtor() {
  mb_asset_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_unit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_tag_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MbDataPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MbDataPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MbDataPacket_descriptor_;
}

const MbDataPacket& MbDataPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SxDataTransfer_2eproto();
  return *default_instance_;
}

MbDataPacket* MbDataPacket::default_instance_ = NULL;

MbDataPacket* MbDataPacket::New(::google::protobuf::Arena* arena) const {
  MbDataPacket* n = new MbDataPacket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MbDataPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:TSDStreaming.MbDataPacket)
  mb_asset_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_tag_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MbDataPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TSDStreaming.MbDataPacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string mb_asset_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mb_asset_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mb_asset_id().data(), this->mb_asset_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TSDStreaming.MbDataPacket.mb_asset_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mb_unit;
        break;
      }

      // optional string mb_unit = 2;
      case 2: {
        if (tag == 18) {
         parse_mb_unit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mb_unit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mb_unit().data(), this->mb_unit().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TSDStreaming.MbDataPacket.mb_unit"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mb_value;
        break;
      }

      // optional string mb_value = 3;
      case 3: {
        if (tag == 26) {
         parse_mb_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mb_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mb_value().data(), this->mb_value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TSDStreaming.MbDataPacket.mb_value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_mb_status;
        break;
      }

      // optional string mb_status = 4;
      case 4: {
        if (tag == 34) {
         parse_mb_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mb_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mb_status().data(), this->mb_status().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TSDStreaming.MbDataPacket.mb_status"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_mb_time;
        break;
      }

      // optional string mb_time = 5;
      case 5: {
        if (tag == 42) {
         parse_mb_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mb_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mb_time().data(), this->mb_time().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TSDStreaming.MbDataPacket.mb_time"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_mb_tag_type;
        break;
      }

      // optional string mb_tag_type = 6;
      case 6: {
        if (tag == 50) {
         parse_mb_tag_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mb_tag_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mb_tag_type().data(), this->mb_tag_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TSDStreaming.MbDataPacket.mb_tag_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TSDStreaming.MbDataPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TSDStreaming.MbDataPacket)
  return false;
#undef DO_
}

void MbDataPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TSDStreaming.MbDataPacket)
  // optional string mb_asset_id = 1;
  if (this->mb_asset_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mb_asset_id().data(), this->mb_asset_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDataPacket.mb_asset_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mb_asset_id(), output);
  }

  // optional string mb_unit = 2;
  if (this->mb_unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mb_unit().data(), this->mb_unit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDataPacket.mb_unit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mb_unit(), output);
  }

  // optional string mb_value = 3;
  if (this->mb_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mb_value().data(), this->mb_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDataPacket.mb_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mb_value(), output);
  }

  // optional string mb_status = 4;
  if (this->mb_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mb_status().data(), this->mb_status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDataPacket.mb_status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mb_status(), output);
  }

  // optional string mb_time = 5;
  if (this->mb_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mb_time().data(), this->mb_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDataPacket.mb_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->mb_time(), output);
  }

  // optional string mb_tag_type = 6;
  if (this->mb_tag_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mb_tag_type().data(), this->mb_tag_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDataPacket.mb_tag_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->mb_tag_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:TSDStreaming.MbDataPacket)
}

::google::protobuf::uint8* MbDataPacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSDStreaming.MbDataPacket)
  // optional string mb_asset_id = 1;
  if (this->mb_asset_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mb_asset_id().data(), this->mb_asset_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDataPacket.mb_asset_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mb_asset_id(), target);
  }

  // optional string mb_unit = 2;
  if (this->mb_unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mb_unit().data(), this->mb_unit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDataPacket.mb_unit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mb_unit(), target);
  }

  // optional string mb_value = 3;
  if (this->mb_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mb_value().data(), this->mb_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDataPacket.mb_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mb_value(), target);
  }

  // optional string mb_status = 4;
  if (this->mb_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mb_status().data(), this->mb_status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDataPacket.mb_status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mb_status(), target);
  }

  // optional string mb_time = 5;
  if (this->mb_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mb_time().data(), this->mb_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDataPacket.mb_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mb_time(), target);
  }

  // optional string mb_tag_type = 6;
  if (this->mb_tag_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mb_tag_type().data(), this->mb_tag_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDataPacket.mb_tag_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->mb_tag_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TSDStreaming.MbDataPacket)
  return target;
}

int MbDataPacket::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:TSDStreaming.MbDataPacket)
  int total_size = 0;

  // optional string mb_asset_id = 1;
  if (this->mb_asset_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mb_asset_id());
  }

  // optional string mb_unit = 2;
  if (this->mb_unit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mb_unit());
  }

  // optional string mb_value = 3;
  if (this->mb_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mb_value());
  }

  // optional string mb_status = 4;
  if (this->mb_status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mb_status());
  }

  // optional string mb_time = 5;
  if (this->mb_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mb_time());
  }

  // optional string mb_tag_type = 6;
  if (this->mb_tag_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mb_tag_type());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MbDataPacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSDStreaming.MbDataPacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MbDataPacket* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MbDataPacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSDStreaming.MbDataPacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSDStreaming.MbDataPacket)
    MergeFrom(*source);
  }
}

void MbDataPacket::MergeFrom(const MbDataPacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSDStreaming.MbDataPacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.mb_asset_id().size() > 0) {

    mb_asset_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mb_asset_id_);
  }
  if (from.mb_unit().size() > 0) {

    mb_unit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mb_unit_);
  }
  if (from.mb_value().size() > 0) {

    mb_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mb_value_);
  }
  if (from.mb_status().size() > 0) {

    mb_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mb_status_);
  }
  if (from.mb_time().size() > 0) {

    mb_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mb_time_);
  }
  if (from.mb_tag_type().size() > 0) {

    mb_tag_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mb_tag_type_);
  }
}

void MbDataPacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSDStreaming.MbDataPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MbDataPacket::CopyFrom(const MbDataPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSDStreaming.MbDataPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MbDataPacket::IsInitialized() const {

  return true;
}

void MbDataPacket::Swap(MbDataPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MbDataPacket::InternalSwap(MbDataPacket* other) {
  mb_asset_id_.Swap(&other->mb_asset_id_);
  mb_unit_.Swap(&other->mb_unit_);
  mb_value_.Swap(&other->mb_value_);
  mb_status_.Swap(&other->mb_status_);
  mb_time_.Swap(&other->mb_time_);
  mb_tag_type_.Swap(&other->mb_tag_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MbDataPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MbDataPacket_descriptor_;
  metadata.reflection = MbDataPacket_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MbDataPacket

// optional string mb_asset_id = 1;
void MbDataPacket::clear_mb_asset_id() {
  mb_asset_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MbDataPacket::mb_asset_id() const {
  // @@protoc_insertion_point(field_get:TSDStreaming.MbDataPacket.mb_asset_id)
  return mb_asset_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDataPacket::set_mb_asset_id(const ::std::string& value) {
  
  mb_asset_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TSDStreaming.MbDataPacket.mb_asset_id)
}
 void MbDataPacket::set_mb_asset_id(const char* value) {
  
  mb_asset_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TSDStreaming.MbDataPacket.mb_asset_id)
}
 void MbDataPacket::set_mb_asset_id(const char* value, size_t size) {
  
  mb_asset_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TSDStreaming.MbDataPacket.mb_asset_id)
}
 ::std::string* MbDataPacket::mutable_mb_asset_id() {
  
  // @@protoc_insertion_point(field_mutable:TSDStreaming.MbDataPacket.mb_asset_id)
  return mb_asset_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MbDataPacket::release_mb_asset_id() {
  // @@protoc_insertion_point(field_release:TSDStreaming.MbDataPacket.mb_asset_id)
  
  return mb_asset_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDataPacket::set_allocated_mb_asset_id(::std::string* mb_asset_id) {
  if (mb_asset_id != NULL) {
    
  } else {
    
  }
  mb_asset_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mb_asset_id);
  // @@protoc_insertion_point(field_set_allocated:TSDStreaming.MbDataPacket.mb_asset_id)
}

// optional string mb_unit = 2;
void MbDataPacket::clear_mb_unit() {
  mb_unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MbDataPacket::mb_unit() const {
  // @@protoc_insertion_point(field_get:TSDStreaming.MbDataPacket.mb_unit)
  return mb_unit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDataPacket::set_mb_unit(const ::std::string& value) {
  
  mb_unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TSDStreaming.MbDataPacket.mb_unit)
}
 void MbDataPacket::set_mb_unit(const char* value) {
  
  mb_unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TSDStreaming.MbDataPacket.mb_unit)
}
 void MbDataPacket::set_mb_unit(const char* value, size_t size) {
  
  mb_unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TSDStreaming.MbDataPacket.mb_unit)
}
 ::std::string* MbDataPacket::mutable_mb_unit() {
  
  // @@protoc_insertion_point(field_mutable:TSDStreaming.MbDataPacket.mb_unit)
  return mb_unit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MbDataPacket::release_mb_unit() {
  // @@protoc_insertion_point(field_release:TSDStreaming.MbDataPacket.mb_unit)
  
  return mb_unit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDataPacket::set_allocated_mb_unit(::std::string* mb_unit) {
  if (mb_unit != NULL) {
    
  } else {
    
  }
  mb_unit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mb_unit);
  // @@protoc_insertion_point(field_set_allocated:TSDStreaming.MbDataPacket.mb_unit)
}

// optional string mb_value = 3;
void MbDataPacket::clear_mb_value() {
  mb_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MbDataPacket::mb_value() const {
  // @@protoc_insertion_point(field_get:TSDStreaming.MbDataPacket.mb_value)
  return mb_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDataPacket::set_mb_value(const ::std::string& value) {
  
  mb_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TSDStreaming.MbDataPacket.mb_value)
}
 void MbDataPacket::set_mb_value(const char* value) {
  
  mb_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TSDStreaming.MbDataPacket.mb_value)
}
 void MbDataPacket::set_mb_value(const char* value, size_t size) {
  
  mb_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TSDStreaming.MbDataPacket.mb_value)
}
 ::std::string* MbDataPacket::mutable_mb_value() {
  
  // @@protoc_insertion_point(field_mutable:TSDStreaming.MbDataPacket.mb_value)
  return mb_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MbDataPacket::release_mb_value() {
  // @@protoc_insertion_point(field_release:TSDStreaming.MbDataPacket.mb_value)
  
  return mb_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDataPacket::set_allocated_mb_value(::std::string* mb_value) {
  if (mb_value != NULL) {
    
  } else {
    
  }
  mb_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mb_value);
  // @@protoc_insertion_point(field_set_allocated:TSDStreaming.MbDataPacket.mb_value)
}

// optional string mb_status = 4;
void MbDataPacket::clear_mb_status() {
  mb_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MbDataPacket::mb_status() const {
  // @@protoc_insertion_point(field_get:TSDStreaming.MbDataPacket.mb_status)
  return mb_status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDataPacket::set_mb_status(const ::std::string& value) {
  
  mb_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TSDStreaming.MbDataPacket.mb_status)
}
 void MbDataPacket::set_mb_status(const char* value) {
  
  mb_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TSDStreaming.MbDataPacket.mb_status)
}
 void MbDataPacket::set_mb_status(const char* value, size_t size) {
  
  mb_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TSDStreaming.MbDataPacket.mb_status)
}
 ::std::string* MbDataPacket::mutable_mb_status() {
  
  // @@protoc_insertion_point(field_mutable:TSDStreaming.MbDataPacket.mb_status)
  return mb_status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MbDataPacket::release_mb_status() {
  // @@protoc_insertion_point(field_release:TSDStreaming.MbDataPacket.mb_status)
  
  return mb_status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDataPacket::set_allocated_mb_status(::std::string* mb_status) {
  if (mb_status != NULL) {
    
  } else {
    
  }
  mb_status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mb_status);
  // @@protoc_insertion_point(field_set_allocated:TSDStreaming.MbDataPacket.mb_status)
}

// optional string mb_time = 5;
void MbDataPacket::clear_mb_time() {
  mb_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MbDataPacket::mb_time() const {
  // @@protoc_insertion_point(field_get:TSDStreaming.MbDataPacket.mb_time)
  return mb_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDataPacket::set_mb_time(const ::std::string& value) {
  
  mb_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TSDStreaming.MbDataPacket.mb_time)
}
 void MbDataPacket::set_mb_time(const char* value) {
  
  mb_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TSDStreaming.MbDataPacket.mb_time)
}
 void MbDataPacket::set_mb_time(const char* value, size_t size) {
  
  mb_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TSDStreaming.MbDataPacket.mb_time)
}
 ::std::string* MbDataPacket::mutable_mb_time() {
  
  // @@protoc_insertion_point(field_mutable:TSDStreaming.MbDataPacket.mb_time)
  return mb_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MbDataPacket::release_mb_time() {
  // @@protoc_insertion_point(field_release:TSDStreaming.MbDataPacket.mb_time)
  
  return mb_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDataPacket::set_allocated_mb_time(::std::string* mb_time) {
  if (mb_time != NULL) {
    
  } else {
    
  }
  mb_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mb_time);
  // @@protoc_insertion_point(field_set_allocated:TSDStreaming.MbDataPacket.mb_time)
}

// optional string mb_tag_type = 6;
void MbDataPacket::clear_mb_tag_type() {
  mb_tag_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MbDataPacket::mb_tag_type() const {
  // @@protoc_insertion_point(field_get:TSDStreaming.MbDataPacket.mb_tag_type)
  return mb_tag_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDataPacket::set_mb_tag_type(const ::std::string& value) {
  
  mb_tag_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TSDStreaming.MbDataPacket.mb_tag_type)
}
 void MbDataPacket::set_mb_tag_type(const char* value) {
  
  mb_tag_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TSDStreaming.MbDataPacket.mb_tag_type)
}
 void MbDataPacket::set_mb_tag_type(const char* value, size_t size) {
  
  mb_tag_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TSDStreaming.MbDataPacket.mb_tag_type)
}
 ::std::string* MbDataPacket::mutable_mb_tag_type() {
  
  // @@protoc_insertion_point(field_mutable:TSDStreaming.MbDataPacket.mb_tag_type)
  return mb_tag_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MbDataPacket::release_mb_tag_type() {
  // @@protoc_insertion_point(field_release:TSDStreaming.MbDataPacket.mb_tag_type)
  
  return mb_tag_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDataPacket::set_allocated_mb_tag_type(::std::string* mb_tag_type) {
  if (mb_tag_type != NULL) {
    
  } else {
    
  }
  mb_tag_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mb_tag_type);
  // @@protoc_insertion_point(field_set_allocated:TSDStreaming.MbDataPacket.mb_tag_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MbDatRecvResponse::kMbErrorCodeFieldNumber;
const int MbDatRecvResponse::kMbBatchIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MbDatRecvResponse::MbDatRecvResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TSDStreaming.MbDatRecvResponse)
}

void MbDatRecvResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MbDatRecvResponse::MbDatRecvResponse(const MbDatRecvResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TSDStreaming.MbDatRecvResponse)
}

void MbDatRecvResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  mb_error_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_batch_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MbDatRecvResponse::~MbDatRecvResponse() {
  // @@protoc_insertion_point(destructor:TSDStreaming.MbDatRecvResponse)
  SharedDtor();
}

void MbDatRecvResponse::SharedDtor() {
  mb_error_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_batch_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MbDatRecvResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MbDatRecvResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MbDatRecvResponse_descriptor_;
}

const MbDatRecvResponse& MbDatRecvResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SxDataTransfer_2eproto();
  return *default_instance_;
}

MbDatRecvResponse* MbDatRecvResponse::default_instance_ = NULL;

MbDatRecvResponse* MbDatRecvResponse::New(::google::protobuf::Arena* arena) const {
  MbDatRecvResponse* n = new MbDatRecvResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MbDatRecvResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TSDStreaming.MbDatRecvResponse)
  mb_error_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mb_batch_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MbDatRecvResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TSDStreaming.MbDatRecvResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string mb_error_code = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mb_error_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mb_error_code().data(), this->mb_error_code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TSDStreaming.MbDatRecvResponse.mb_error_code"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mb_batch_id;
        break;
      }

      // optional string mb_batch_id = 2;
      case 2: {
        if (tag == 18) {
         parse_mb_batch_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mb_batch_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mb_batch_id().data(), this->mb_batch_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TSDStreaming.MbDatRecvResponse.mb_batch_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TSDStreaming.MbDatRecvResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TSDStreaming.MbDatRecvResponse)
  return false;
#undef DO_
}

void MbDatRecvResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TSDStreaming.MbDatRecvResponse)
  // optional string mb_error_code = 1;
  if (this->mb_error_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mb_error_code().data(), this->mb_error_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDatRecvResponse.mb_error_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mb_error_code(), output);
  }

  // optional string mb_batch_id = 2;
  if (this->mb_batch_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mb_batch_id().data(), this->mb_batch_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDatRecvResponse.mb_batch_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mb_batch_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:TSDStreaming.MbDatRecvResponse)
}

::google::protobuf::uint8* MbDatRecvResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSDStreaming.MbDatRecvResponse)
  // optional string mb_error_code = 1;
  if (this->mb_error_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mb_error_code().data(), this->mb_error_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDatRecvResponse.mb_error_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mb_error_code(), target);
  }

  // optional string mb_batch_id = 2;
  if (this->mb_batch_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mb_batch_id().data(), this->mb_batch_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TSDStreaming.MbDatRecvResponse.mb_batch_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mb_batch_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TSDStreaming.MbDatRecvResponse)
  return target;
}

int MbDatRecvResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:TSDStreaming.MbDatRecvResponse)
  int total_size = 0;

  // optional string mb_error_code = 1;
  if (this->mb_error_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mb_error_code());
  }

  // optional string mb_batch_id = 2;
  if (this->mb_batch_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mb_batch_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MbDatRecvResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TSDStreaming.MbDatRecvResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MbDatRecvResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MbDatRecvResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TSDStreaming.MbDatRecvResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TSDStreaming.MbDatRecvResponse)
    MergeFrom(*source);
  }
}

void MbDatRecvResponse::MergeFrom(const MbDatRecvResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TSDStreaming.MbDatRecvResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.mb_error_code().size() > 0) {

    mb_error_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mb_error_code_);
  }
  if (from.mb_batch_id().size() > 0) {

    mb_batch_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mb_batch_id_);
  }
}

void MbDatRecvResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TSDStreaming.MbDatRecvResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MbDatRecvResponse::CopyFrom(const MbDatRecvResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSDStreaming.MbDatRecvResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MbDatRecvResponse::IsInitialized() const {

  return true;
}

void MbDatRecvResponse::Swap(MbDatRecvResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MbDatRecvResponse::InternalSwap(MbDatRecvResponse* other) {
  mb_error_code_.Swap(&other->mb_error_code_);
  mb_batch_id_.Swap(&other->mb_batch_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MbDatRecvResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MbDatRecvResponse_descriptor_;
  metadata.reflection = MbDatRecvResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MbDatRecvResponse

// optional string mb_error_code = 1;
void MbDatRecvResponse::clear_mb_error_code() {
  mb_error_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MbDatRecvResponse::mb_error_code() const {
  // @@protoc_insertion_point(field_get:TSDStreaming.MbDatRecvResponse.mb_error_code)
  return mb_error_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDatRecvResponse::set_mb_error_code(const ::std::string& value) {
  
  mb_error_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TSDStreaming.MbDatRecvResponse.mb_error_code)
}
 void MbDatRecvResponse::set_mb_error_code(const char* value) {
  
  mb_error_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TSDStreaming.MbDatRecvResponse.mb_error_code)
}
 void MbDatRecvResponse::set_mb_error_code(const char* value, size_t size) {
  
  mb_error_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TSDStreaming.MbDatRecvResponse.mb_error_code)
}
 ::std::string* MbDatRecvResponse::mutable_mb_error_code() {
  
  // @@protoc_insertion_point(field_mutable:TSDStreaming.MbDatRecvResponse.mb_error_code)
  return mb_error_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MbDatRecvResponse::release_mb_error_code() {
  // @@protoc_insertion_point(field_release:TSDStreaming.MbDatRecvResponse.mb_error_code)
  
  return mb_error_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDatRecvResponse::set_allocated_mb_error_code(::std::string* mb_error_code) {
  if (mb_error_code != NULL) {
    
  } else {
    
  }
  mb_error_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mb_error_code);
  // @@protoc_insertion_point(field_set_allocated:TSDStreaming.MbDatRecvResponse.mb_error_code)
}

// optional string mb_batch_id = 2;
void MbDatRecvResponse::clear_mb_batch_id() {
  mb_batch_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MbDatRecvResponse::mb_batch_id() const {
  // @@protoc_insertion_point(field_get:TSDStreaming.MbDatRecvResponse.mb_batch_id)
  return mb_batch_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDatRecvResponse::set_mb_batch_id(const ::std::string& value) {
  
  mb_batch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TSDStreaming.MbDatRecvResponse.mb_batch_id)
}
 void MbDatRecvResponse::set_mb_batch_id(const char* value) {
  
  mb_batch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TSDStreaming.MbDatRecvResponse.mb_batch_id)
}
 void MbDatRecvResponse::set_mb_batch_id(const char* value, size_t size) {
  
  mb_batch_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TSDStreaming.MbDatRecvResponse.mb_batch_id)
}
 ::std::string* MbDatRecvResponse::mutable_mb_batch_id() {
  
  // @@protoc_insertion_point(field_mutable:TSDStreaming.MbDatRecvResponse.mb_batch_id)
  return mb_batch_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MbDatRecvResponse::release_mb_batch_id() {
  // @@protoc_insertion_point(field_release:TSDStreaming.MbDatRecvResponse.mb_batch_id)
  
  return mb_batch_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MbDatRecvResponse::set_allocated_mb_batch_id(::std::string* mb_batch_id) {
  if (mb_batch_id != NULL) {
    
  } else {
    
  }
  mb_batch_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mb_batch_id);
  // @@protoc_insertion_point(field_set_allocated:TSDStreaming.MbDatRecvResponse.mb_batch_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace TSDStreaming

// @@protoc_insertion_point(global_scope)
